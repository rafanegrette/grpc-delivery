plugins {
    id 'java-library'
    id "com.google.protobuf" version "0.9.4"
    id 'org.springframework.boot' version '2.7.15'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}


repositories {
    mavenCentral()
}

ext {
    set('testcontainersVersion', "1.18.3")
}

dependencies {
    implementation 'net.devh:grpc-client-spring-boot-starter:2.14.0.RELEASE'
    implementation 'net.devh:grpc-spring-boot-starter:4.6.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-cassandra'
    implementation 'com.datastax.astra:astra-spring-boot-starter:0.4'
    implementation group: 'com.h2database', name: 'h2', version: '1.3.148'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'net.devh:grpc-spring-boot-starter:2.14.0.RELEASE'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0'
    implementation 'org.hibernate:hibernate-core:5.6.4.Final'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:cassandra'
    testImplementation 'org.testcontainers:junit-jupiter'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    // Otras dependencias
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.10.1'
    }

    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.25.0'
        }
    }

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}